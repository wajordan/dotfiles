# -----------------------------------------------
# Shell Aliases
# -----------------------------------------------
set_ls_alias=$(ls --color=auto -F 2>/dev/null)
[ "$set_ls_alias" ] && alias ls='ls --color=auto -F'
unset set_ls_alias

alias tld='tail -f log/development.log'
alias -s log="tail -f"
alias rsu='kill -HUP `cat tmp/pids/unicorn.pid`'
alias stu='kill `cat tmp/pids/unicorn.pid`'
alias brk='bundle exec rake'
alias brl='bundle exec rails'
alias be='bundle exec'
alias bo='bundle open'

# https://git-scm.com/docs/git-worktree
alias .G="git --work-tree=$HOME/ --git-dir=$HOME/dotfiles.git"

alias c="clear"
alias restart="touch tmp/restart.txt ; echo 'restarted pow server'";
alias webpackr="./bin/webpack-dev-server";
alias crdb="bundle exec rails db";
alias server="php -S localhost:3000"
alias fixtestdb="bundle exec rake db:drop db:create RAILS_ENV=test;bundle exec rake db:test:prepare;"
alias dps="docker ps --format 'table {{.Names}}\t{{.Command}}\t{{.Status}}\t{{.RunningFor}}' --no-trunc"
alias cmd="echo 'CTRL+A  # move to beginning of line\nCTRL+E  # moves to end of line\nCTRL+U  # kills backward from point to the beginning of line\nCTRL+K  # deletes (kill) forward to end of line'"

matrix() { echo -e "\e[1;40m" ; clear ; while :; do echo $LINES $COLUMNS $(( $RANDOM % $COLUMNS)) $(( $RANDOM % 72 )) ;sleep 0.05; done|awk '{ letters="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()"; c=$4;        letter=substr(letters,c,1);a[$3]=0;for (x in a) {o=a[x];a[x]=a[x]+1; printf "\033[%s;%sH\033[2;32m%s",o,x,letter; printf "\033[%s;%sH\033[1;37m%s\033[0;0H",a[x],x,letter;if (a[x] >= $1) { a[x]=0; } }}' }

superngtest() {yarn tspec ${1} --browsers ChromeHeadless --source-map false;}

alias clearpacks="rm -rf public/packs/ ; echo 'cleared public/packs/'";
alias ngtestcc="ng test app --browsers ChromeHeadless --code-coverage --source-map false"
alias dps="docker ps --format 'table {{.Names}}\t{{.Command}}\t{{.Status}}\t{{.RunningFor}}' --no-trunc"
alias dup="dc start postgres-callrail redis-callrail callsearch rabbitmq postgis-swappy redis-swappy dynamodb-swappy"
alias ketchup="bundle install && bundle exec rake db:migrate && bundle exec rake db:migrate RAILS_ENV=test && git checkout db/schema.rb"

# OLD WAY BEFORE DOCKER :......
# To enable automatic start for Redis, PostgreSQL, and RabbitMQ, make a series of
# symlinks from the brew-installed services to the LaunchAgents folder for your user.
#
# ln -sfv /usr/local/opt/postgresql@9.5/*.plist ~/Library/LaunchAgents/
# ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents/
# ln -sfv /usr/local/opt/rabbitmq/*.plist ~/Library/LaunchAgents/

alias pg-start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql@9.5.plist"
alias pg-stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql@9.5.plist"
alias redis-start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist"
alias redis-stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.redis.plist"
alias rabbitmq-start="launchctl load ~/Library/LaunchAgents/homebrew.mxcl.rabbitmq.plist"
alias rabbitmq-stop="launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.rabbitmq.plist"

# To enable automatic start for Redis, PostgreSQL, and RabbitMQ, make a series of
# symlinks from the brew-installed services to the LaunchAgents folder for your user.
#
# ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents/
